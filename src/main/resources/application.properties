
#Google Oauth 2 Configuration
spring.security.oauth2.client.registration.google.client-id=689398816291-t2ndruhhbqfqmjdbqj4ftlg3rsur4g65.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.google.redirect-uri-template=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name

#DB Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/MovieOrderManagementDb
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.sql.init.mode=always